name: Build & Deploy Spring app

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy Spring boot for beginner
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Unit Tests
        run: mvn -B test --file pom.xml

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Build Docker Image
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: false
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-app:today
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Push to Docker Hub
        uses: docker/build-push-action@v2
        with:
          context: .
          dockerfile: Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-app:today

  deploy:
    name: Deploy Docker Image on Self-Hosted Runner
    runs-on: self-hosted

    steps:
      - name: Checkout code
        uses: actions/checkout@v3


      - name: Pull Docker Image
        run: sudo docker pull ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-app:today

      - name: Stop and Remove Existing Container
        run: |
          CONTAINER_NAME="spring-boot-app-container"
          if [ "$(sudo docker ps -a -q -f name=${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-app:today)" ]; then
            sudo docker stop $CONTAINER_NAME
            sudo docker rm $CONTAINER_NAME
          fi

      - name: Run Docker Container
        run: |
          sudo docker run -d \
            -p 8085:8080 \
            ${{ secrets.DOCKER_HUB_USERNAME }}/spring-boot-app:today

      
