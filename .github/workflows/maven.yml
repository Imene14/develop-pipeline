name: Build & Deploy Spring app

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy Spring Boot for Beginner
    runs-on: self-hosted
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17
          cache: 'maven'
          cache-dependency-path: 'sub-project/pom.xml'

      - name: Build the application
        run: |
          mvn clean
          mvn -B package --file pom.xml

      - name: Build Docker Image
        run: |
          sudo docker build -t spring-boot-app:today .

      - name: Stop and Remove Existing Container
        run: |
          CONTAINER_NAME="spring-boot-app-container"
          HOST_PORT=8085
          # Find and remove the container by name or port
          CONTAINER_ID=$(sudo docker ps -q -f name=$CONTAINER_NAME)
          if [ -n "$CONTAINER_ID" ]; then
            echo "Stopping and removing container ID $CONTAINER_ID with name $CONTAINER_NAME"
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi
          CONTAINER_ID=$(sudo docker ps -q --filter "publish=$HOST_PORT")
          if [ -n "$CONTAINER_ID" ]; then
            echo "Stopping and removing container ID $CONTAINER_ID using host port $HOST_PORT"
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi
          # Confirm the container is removed
          REMOVED_CONTAINER_ID=$(sudo docker ps -aq -f name=$CONTAINER_NAME)
          if [ -n "$REMOVED_CONTAINER_ID" ]; then
            echo "Removing container ID $REMOVED_CONTAINER_ID with name $CONTAINER_NAME"
            sudo docker rm -f $REMOVED_CONTAINER_ID
          fi

      - name: Run Docker Container
        run: |
          CONTAINER_NAME="spring-boot-app-container"
          sudo docker run -d \
            --name $CONTAINER_NAME \
            -p 8085:8080 \
            spring-boot-app:today
