name: Build & Deploy Spring app

on:
  push:
    branches:
      - main

jobs:
  build-deploy:
    name: Build and Deploy Spring Boot App
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'corretto'
          java-version: 17

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and Test
        run: mvn -B clean test package --file pom.xml

      - name: Build Docker Image
        run: docker build -t spring-boot-app:latest .

  deploy:
    name: Deploy Docker Image on Self-Hosted Runner
    runs-on: self-hosted
    needs: build-deploy

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Stop and Remove Existing Container
        run: |
          CONTAINER_NAME="spring-boot-app-container"
          HOST_PORT=8085
          # Find the container ID by name
          CONTAINER_ID=$(sudo docker ps -q -f name=$CONTAINER_NAME)
          if [ ! -z "$CONTAINER_ID" ]; then
            echo "Stopping and removing container ID $CONTAINER_ID with name $CONTAINER_NAME"
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi
          # Additionally, check for any container using the specific host port
          CONTAINER_ID=$(sudo docker ps -q --filter "publish=$HOST_PORT")
          if [ ! -z "$CONTAINER_ID" ]; then
            echo "Stopping and removing container ID $CONTAINER_ID using host port $HOST_PORT"
            sudo docker stop $CONTAINER_ID
            sudo docker rm $CONTAINER_ID
          fi

      - name: Run Docker Container
        run: |
          CONTAINER_NAME="spring-boot-app-container"
          sudo docker run -d \
            --name $CONTAINER_NAME \
            -p 8085:8080 \
            spring-boot-app:latest


      
